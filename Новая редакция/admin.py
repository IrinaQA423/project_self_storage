import os
from dotenv import load_dotenv

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext, CommandHandler, CallbackQueryHandler, ConversationHandler

from orders import show_expired_orders, mark_order_expired, show_expired_order_details, show_new_orders, show_order_details, show_completed_orders, accept_order, cancel_order, show_storage_orders, complete_order, delete_expired_order
load_dotenv()

admin_ids = list(map(int, os.getenv('ADMIN_IDS').split(',')))


def is_admin(update: Update) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    user = update.effective_user
    return user and user.id in admin_ids


def admin_panel(update: Update, context: CallbackContext) -> None:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    if not is_admin(update):
        update.message.reply_text("‚õîÔ∏è –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return

    keyboard = [
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞–∫–∞–∑–∞–º", callback_data="admin_stats")],
        [InlineKeyboardButton("üì¶ –ó–∞–∫–∞–∑—ã", callback_data="admin_orders")]
    ]

    if update.callback_query:
        update.callback_query.edit_message_text(
            "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    else:
        update.message.reply_text(
            "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )


def admin_callback_handler(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    query = update.callback_query
    query.answer()

    if not is_admin(update):
        query.edit_message_text("‚õîÔ∏è –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return

    data = query.data

    if data.startswith("accept_order_"):
        accept_order(update, context)
    elif data.startswith("cancel_order_"):
        cancel_order(update, context)
    elif data == "admin_back":
        admin_panel(update, context)
    elif data == "admin_cancel":
        cancel(update, context)
    elif data == "admin_stats":
        show_statistics(query)
    elif data == "admin_orders":
        show_orders(query)
    elif data == "orders_new":
        show_new_orders(query, context)
    elif data == "orders_storage":
        show_storage_orders(query, context)
    elif data.startswith("order_detail_"):
        show_order_details(update, context)
    elif data == "orders_expired":
        show_expired_orders(update, context)
    elif data == "orders_completed":
        show_completed_orders(update, context)
    elif data.startswith("complete_order_"):
        complete_order(update, context)
    elif data.startswith("mark_expired_"):
        mark_order_expired(update, context)
    elif data.startswith("storage_detail_"):
        show_order_details(update, context)
    elif data.startswith("completed_detail_"):
        show_order_details(update, context)
    elif data.startswith("expired_detail_"):
        show_expired_order_details(update, context)
    elif data.startswith("delete_expired_"):
        delete_expired_order(update, context)
    elif data == "admin_completed_orders":
        show_completed_orders(update, context)
    elif data.startswith("delete_expired_"):
        delete_expired_order(update, context)


def show_statistics(query) -> None:
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∑–∞–∫–∞–∑–∞–º"""
    keyboard = [
        [InlineKeyboardButton("üìä –ó–∞–∫–∞–∑—ã —Å —Ä–µ–∫–ª–∞–º—ã", callback_data="ad_orders_stats")],
        [InlineKeyboardButton("üì¶ –í—Å–µ –∑–∞–∫–∞–∑—ã", callback_data="all_orders_stats")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="admin_back")]
    ]
    stats = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞–∫–∞–∑–∞–º: \n\n"
    query.edit_message_text(stats, reply_markup=InlineKeyboardMarkup(keyboard))


def show_orders(query):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏"""
    keyboard = [
        [InlineKeyboardButton("üÜï –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã", callback_data="orders_new")],
        [InlineKeyboardButton("üì¶ –ó–∞–∫–∞–∑—ã –Ω–∞ —Ö—Ä–∞–Ω–µ–Ω–∏–∏", callback_data="orders_storage")],
        [InlineKeyboardButton("‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã", callback_data="admin_completed_orders")],
        [InlineKeyboardButton("‚è±Ô∏è –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã", callback_data="orders_expired")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="admin_back")]
    ]
    query.edit_message_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–∫–∞–∑–æ–≤:",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )


def cancel(update: Update, context: CallbackContext) -> int:
    """–û—Ç–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ"""
    if update.callback_query:
        update.callback_query.edit_message_text("‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        admin_panel(update, context)
    return ConversationHandler.END


def setup_admin_handlers(dispatcher):
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    dispatcher.add_handler(CommandHandler("admin", admin_panel))
    dispatcher.add_handler(CallbackQueryHandler(admin_callback_handler, pattern="^(admin|orders|order_detail|storage_detail|accept_order|cancel_order|complete_order|completed_detail|expired_detail|complete_order|mark_expired|delete_expired)"))
